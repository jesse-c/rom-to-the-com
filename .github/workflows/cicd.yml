name: CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  MIX_ENV: test

permissions:
  contents: read

defaults:
  run:
    working-directory: ./site

jobs:
  setup:
    runs-on: ubuntu-latest
    name: Setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          install-hex: true
          install-rebar: true
          version-type: strict
          version-file: site/.tool-versions

      - name: Restore deps
        uses: actions/cache/restore@v4
        env:
          cache-name: cache-elixir-deps
        with:
          path: site/deps
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-

      - name: Install dependencies
        run: mix deps.get

      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v4
        env:
          cache-name: cache-elixir-deps
        with:
          path: site/deps
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-

  build:
    runs-on: ubuntu-latest
    name: Build
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          install-hex: true
          install-rebar: true
          version-type: strict
          version-file: site/.tool-versions

      - name: Restore deps
        uses: actions/cache/restore@v4
        env:
          cache-name: cache-elixir-deps
        with:
          path: site/deps
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-

      - name: Install dependencies
        run: mix deps.get

      - name: Compiles without warnings
        run: mix compile --warnings-as-errors

      - name: Cache compiled build
        id: cache-build
        uses: actions/cache@v4
        env:
          cache-name: cache-compiled-build
        with:
          path: site/_build
          key: ${{ runner.os }}-build-${{ hashFiles('**/mix.lock') }}-${{ hashFiles('site/mix.exs') }}-${{ hashFiles('site/lib/**/*.ex') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('**/mix.lock') }}-${{ hashFiles('site/mix.exs') }}-
            ${{ runner.os }}-build-${{ hashFiles('**/mix.lock') }}-
            ${{ runner.os }}-build-

  lint:
    runs-on: ubuntu-latest
    name: Lint
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          install-hex: true
          install-rebar: true
          version-type: strict
          version-file: site/.tool-versions

      - name: Restore deps
        uses: actions/cache/restore@v4
        env:
          cache-name: cache-elixir-deps
        with:
          path: site/deps
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-

      - name: Install dependencies
        run: mix deps.get

      - name: Restore compiled build
        uses: actions/cache/restore@v4
        env:
          cache-name: cache-compiled-build
        with:
          path: site/_build
          key: ${{ runner.os }}-build-${{ hashFiles('**/mix.lock') }}-${{ hashFiles('site/mix.exs') }}-${{ hashFiles('site/lib/**/*.ex') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('**/mix.lock') }}-${{ hashFiles('site/mix.exs') }}-
            ${{ runner.os }}-build-${{ hashFiles('**/mix.lock') }}-
            ${{ runner.os }}-build-

      - name: Check formatting
        run: mix format --check-formatted

      - name: Check code analysis
        run: mix credo --all

      - name: Check spelling
        uses: crate-ci/typos@master
        with:
          config: _typos.toml

  test:
    runs-on: ubuntu-latest
    name: Test
    needs: build
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USERNAME: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: rom_to_the_com_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          install-hex: true
          install-rebar: true
          version-type: strict
          version-file: site/.tool-versions

      - name: Restore deps
        uses: actions/cache/restore@v4
        env:
          cache-name: cache-elixir-deps
        with:
          path: site/deps
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-

      - name: Install dependencies
        run: mix deps.get

      - name: Restore compiled build
        uses: actions/cache/restore@v4
        env:
          cache-name: cache-compiled-build
        with:
          path: site/_build
          key: ${{ runner.os }}-build-${{ hashFiles('**/mix.lock') }}-${{ hashFiles('site/mix.exs') }}-${{ hashFiles('site/lib/**/*.ex') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('**/mix.lock') }}-${{ hashFiles('site/mix.exs') }}-
            ${{ runner.os }}-build-${{ hashFiles('**/mix.lock') }}-
            ${{ runner.os }}-build-

      - name: Setup database
        run: mix ecto.create && mix ecto.migrate

      - name: Run tests
        run: mix test
